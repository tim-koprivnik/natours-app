{"mappings":"AIEO,MAAM,EAAY,KACvB,IAAM,EAAK,SAAS,aAAa,CAAC,UAC9B,GAAI,EAAG,aAAa,CAAC,WAAW,CAAC,EACvC,EAEa,EAAY,CAAC,EAAM,KAC9B,IACA,IAAM,EAAS,CAAC,yBAAyB,EAAE,EAAK,EAAE,EAAE,EAAI,MAAM,CAAC,CAC/D,SAAS,aAAa,CAAC,QAAQ,kBAAkB,CAAC,aAAc,GAChE,OAAO,UAAU,CAAC,EAAW,IAC/B,EDPa,EAAQ,MAAO,EAAO,KAEjC,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,CACtB,OAAQ,OACR,IAAK,sBACL,KAAM,CACJ,MAAA,EACA,SAAA,CACF,CACF,EAEwB,CAAA,YAApB,EAAI,IAAI,CAAC,MAAM,GACjB,AAAA,EAAU,UAAW,2BACrB,OAAO,UAAU,CAAC,KAChB,SAAS,MAAM,CAAC,IAClB,EAAG,KAEP,CAAE,MAAO,EAAK,CAKZ,AAAA,EAAU,QAHR,EAAI,QAAQ,EAAI,EAAI,QAAQ,CAAC,IAAI,EAAI,EAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAC1D,EAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CACzB,4BAER,CACF,EAEa,EAAS,UACpB,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,CACtB,OAAQ,MACR,IAAK,sBACP,EAEwB,CAAA,YAApB,EAAI,IAAI,CAAC,MAAM,EAAgB,SAAS,MAAM,CAAC,CAAA,EACrD,CAAE,MAAO,EAAK,CACZ,AAAA,EAAU,QAAS,+BACrB,CACF,EEtCa,EAAiB,MAAO,EAAM,KAEzC,GAAI,CAKF,IAAM,EAAM,MAAM,MAAM,CACtB,OAAQ,QACR,IALA,AAAS,aAAT,EACI,oCACA,0BAIJ,KAAA,CACF,EAEwB,CAAA,YAApB,EAAI,IAAI,CAAC,MAAM,EACjB,AAAA,EACE,UACA,CAAC,EAAE,EAAK,MAAM,CAAC,GAAG,WAAW,GAAK,EAAK,KAAK,CAAC,GAAG,sBAAsB,CAAC,CAG7E,CAAE,MAAO,EAAK,CACZ,AAAA,EAAU,QAAS,EAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAC9C,CACF,EJvBM,EAAM,SAAS,cAAc,CAAC,OAC9B,EAAY,SAAS,aAAa,CAAC,oBACnC,EAAY,SAAS,aAAa,CAAC,gBACnC,EAAe,SAAS,aAAa,CAAC,mBACtC,EAAmB,SAAS,aAAa,CAAC,uBAE5C,GACF,EAAU,gBAAgB,CAAC,SAAU,AAAC,IACpC,EAAE,cAAc,GAGhB,AAAA,EAFc,SAAS,cAAc,CAAC,SAAS,KAAK,CACnC,SAAS,cAAc,CAAC,YAAY,KAAK,CAE5D,GAGE,GAEF,ACnBwB,CAAA,AAAC,IAKzB,IAAM,EAAM,EAAE,GAAG,CAAC,MAAO,CAAE,YAAa,CAAA,CAAM,GAM9C,EAAE,SAAS,CAAC,qDAAsD,CAChE,YACE,yFACJ,GAAG,KAAK,CAAC,GAMT,IAAI,EAAY,EAAE,IAAI,CAAC,CACrB,QAAS,eACT,SAAU,CAAC,GAAI,GAAG,CAClB,WAAY,CAAC,GAAI,GAAG,CACpB,YAAa,CAAC,EAAG,IAAI,AACvB,GAMA,IAAM,EAAS,EAAE,CACjB,EAAU,OAAO,CAAC,AAAC,IAEjB,EAAO,IAAI,CAAC,CAAC,EAAI,WAAW,CAAC,EAAE,CAAE,EAAI,WAAW,CAAC,EAAE,CAAC,EAGpD,EAAE,MAAM,CAAC,CAAC,EAAI,WAAW,CAAC,EAAE,CAAE,EAAI,WAAW,CAAC,EAAE,CAAC,CAAE,CAAE,KAAM,CAAU,GAClE,KAAK,CAAC,GAEN,SAAS,CAAC,CAAC,OAAO,EAAE,EAAI,GAAG,CAAC,EAAE,EAAE,EAAI,WAAW,CAAC,IAAI,CAAC,CAAE,CACtD,UAAW,CAAA,CACb,GACC,SAAS,EACd,GAMA,IAAM,EAAS,EAAE,YAAY,CAAC,GAAQ,GAAG,CAAC,IAC1C,EAAI,SAAS,CAAC,GAGd,EAAI,eAAe,CAAC,OAAO,EAC7B,CAAA,EDrCoB,KAAK,KAAK,CAAC,EAAI,OAAO,CAAC,SAAS,GAIhD,GAAW,EAAU,gBAAgB,CAAC,QAAS,GAE/C,GACF,EAAa,gBAAgB,CAAC,SAAU,AAAC,IACvC,EAAE,cAAc,GAGhB,AAAA,EAAe,CAAE,KAFJ,SAAS,cAAc,CAAC,QAAQ,KAAK,CAE3B,MADT,SAAS,cAAc,CAAC,SAAS,KAAK,AACvB,EAAG,OAClC,GAGE,GACF,EAAiB,gBAAgB,CAAC,SAAU,MAAO,IACjD,EAAE,cAAc,GAChB,IAAM,EAAU,SAAS,aAAa,CAAC,sBACvC,CAAA,EAAQ,WAAW,CAAG,cACtB,IAAM,EAAkB,SAAS,cAAc,CAAC,oBAAoB,KAAK,CACnE,EAAW,SAAS,cAAc,CAAC,YAAY,KAAK,CACpD,EAAkB,SAAS,cAAc,CAAC,oBAAoB,KAAK,AACzE,OAAM,AAAA,EACJ,CAAE,gBAAA,EAAiB,SAAA,EAAU,gBAAA,CAAgB,EAC7C,YAEF,EAAQ,WAAW,CAAG,gBACtB,SAAS,cAAc,CAAC,oBAAoB,KAAK,CAAG,GACpD,SAAS,cAAc,CAAC,YAAY,KAAK,CAAG,GAC5C,SAAS,cAAc,CAAC,oBAAoB,KAAK,CAAG,EACtD","sources":["<anon>","public/js/index.js","public/js/leaflet.js","public/js/login.js","public/js/alert.js","public/js/updateSettings.js"],"sourcesContent":["/* eslint-disable */ const $b65541e07a62170e$export$4c5dd147b21b9176 = (locations)=>{\n    // ----------------------------------------------\n    // Create the map and attach it to the #map\n    // ----------------------------------------------\n    const map = L.map(\"map\", {\n        zoomControl: false\n    });\n    // ----------------------------------------------\n    // Add a tile layer to add to our map\n    // ----------------------------------------------\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n    // ----------------------------------------------\n    // Create icon using the image provided by Jonas\n    // ----------------------------------------------\n    var greenIcon = L.icon({\n        iconUrl: \"/img/pin.png\",\n        iconSize: [\n            32,\n            40\n        ],\n        iconAnchor: [\n            16,\n            45\n        ],\n        popupAnchor: [\n            0,\n            -50\n        ]\n    });\n    // ----------------------------------------------\n    // Add locations to the map\n    // ----------------------------------------------\n    const points = [];\n    locations.forEach((loc)=>{\n        // Create points\n        points.push([\n            loc.coordinates[1],\n            loc.coordinates[0]\n        ]);\n        // Add markers\n        L.marker([\n            loc.coordinates[1],\n            loc.coordinates[0]\n        ], {\n            icon: greenIcon\n        }).addTo(map)// Add popup\n        .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n            autoClose: false\n        }).openPopup();\n    });\n    // ----------------------------------------------\n    // Set map bounds to include current location\n    // ----------------------------------------------\n    const bounds = L.latLngBounds(points).pad(0.5);\n    map.fitBounds(bounds);\n    // Disable scroll on map\n    map.scrollWheelZoom.disable();\n};\n\n\n/* eslint-disable */ // import axios from 'axios';\n/* eslint-disable */ const $e9c91518574fdb31$export$516836c6a9dfc573 = ()=>{\n    const el = document.querySelector(\".alert\");\n    if (el) el.parentElement.removeChild(el);\n};\nconst $e9c91518574fdb31$export$de026b00723010c1 = (type, msg)=>{\n    $e9c91518574fdb31$export$516836c6a9dfc573();\n    const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n    document.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", markup);\n    window.setTimeout($e9c91518574fdb31$export$516836c6a9dfc573, 5000);\n};\n\n\nconst $bf5b431e6a69fea8$export$596d806903d1f59e = async (email, password)=>{\n    const devBaseUrl = \"http://127.0.0.1:3000\";\n    try {\n        const res = await axios({\n            method: \"POST\",\n            url: \"/api/v1/users/login\",\n            data: {\n                email: email,\n                password: password\n            }\n        });\n        if (res.data.status === \"success\") {\n            (0, $e9c91518574fdb31$export$de026b00723010c1)(\"success\", \"Logged in successfully!\");\n            window.setTimeout(()=>{\n                location.assign(\"/\");\n            }, 1000);\n        }\n    } catch (err) {\n        const errorMessage = err.response && err.response.data && err.response.data.message ? err.response.data.message : \"An unknown error occurred\";\n        (0, $e9c91518574fdb31$export$de026b00723010c1)(\"error\", errorMessage);\n    }\n};\nconst $bf5b431e6a69fea8$export$a0973bcfe11b05c9 = async ()=>{\n    try {\n        const res = await axios({\n            method: \"GET\",\n            url: \"/api/v1/users/logout\"\n        });\n        if (res.data.status === \"success\") location.reload(true);\n    } catch (err) {\n        (0, $e9c91518574fdb31$export$de026b00723010c1)(\"error\", \"Error logging out! Try again\");\n    }\n};\n\n\n/* eslint-disable */ \nconst $955535ce7513e32c$export$f558026a994b6051 = async (data, type)=>{\n    const devBaseUrl = \"http://127.0.0.1:3000\";\n    try {\n        const url = type === \"password\" ? \"/api/v1/users/update-my-password/\" : \"/api/v1/users/update-me\";\n        const res = await axios({\n            method: \"PATCH\",\n            url: url,\n            data: data\n        });\n        if (res.data.status === \"success\") (0, $e9c91518574fdb31$export$de026b00723010c1)(\"success\", `${type.charAt(0).toUpperCase() + type.slice(1)} updated successfully!`);\n    } catch (err) {\n        (0, $e9c91518574fdb31$export$de026b00723010c1)(\"error\", err.response.data.message);\n    }\n};\n\n\nconst $407eccdc61ba7a94$var$map = document.getElementById(\"map\");\nconst $407eccdc61ba7a94$var$logoutBtn = document.querySelector(\".nav__el--logout\");\nconst $407eccdc61ba7a94$var$loginForm = document.querySelector(\".form--login\");\nconst $407eccdc61ba7a94$var$userDataForm = document.querySelector(\".form-user-data\");\nconst $407eccdc61ba7a94$var$userPasswordForm = document.querySelector(\".form-user-password\");\nif ($407eccdc61ba7a94$var$loginForm) $407eccdc61ba7a94$var$loginForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const email = document.getElementById(\"email\").value;\n    const password = document.getElementById(\"password\").value;\n    (0, $bf5b431e6a69fea8$export$596d806903d1f59e)(email, password);\n});\nif ($407eccdc61ba7a94$var$map) {\n    const locations = JSON.parse($407eccdc61ba7a94$var$map.dataset.locations);\n    (0, $b65541e07a62170e$export$4c5dd147b21b9176)(locations);\n}\nif ($407eccdc61ba7a94$var$logoutBtn) $407eccdc61ba7a94$var$logoutBtn.addEventListener(\"click\", (0, $bf5b431e6a69fea8$export$a0973bcfe11b05c9));\nif ($407eccdc61ba7a94$var$userDataForm) $407eccdc61ba7a94$var$userDataForm.addEventListener(\"submit\", (e)=>{\n    e.preventDefault();\n    const name = document.getElementById(\"name\").value;\n    const email = document.getElementById(\"email\").value;\n    (0, $955535ce7513e32c$export$f558026a994b6051)({\n        name: name,\n        email: email\n    }, \"data\");\n});\nif ($407eccdc61ba7a94$var$userPasswordForm) $407eccdc61ba7a94$var$userPasswordForm.addEventListener(\"submit\", async (e)=>{\n    e.preventDefault();\n    const btnSave = document.querySelector(\".btn--save-password\");\n    btnSave.textContent = \"Updating...\";\n    const passwordCurrent = document.getElementById(\"password-current\").value;\n    const password = document.getElementById(\"password\").value;\n    const passwordConfirm = document.getElementById(\"password-confirm\").value;\n    await (0, $955535ce7513e32c$export$f558026a994b6051)({\n        passwordCurrent: passwordCurrent,\n        password: password,\n        passwordConfirm: passwordConfirm\n    }, \"password\");\n    btnSave.textContent = \"Save Password\";\n    document.getElementById(\"password-current\").value = \"\";\n    document.getElementById(\"password\").value = \"\";\n    document.getElementById(\"password-confirm\").value = \"\";\n});\n\n\n//# sourceMappingURL=index.js.map\n","import { displayMap } from './leaflet';\nimport { login, logout } from './login';\nimport { updateSettings } from './updateSettings';\n\nconst map = document.getElementById('map');\nconst logoutBtn = document.querySelector('.nav__el--logout');\nconst loginForm = document.querySelector('.form--login');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\n\nif (loginForm) {\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    login(email, password);\n  });\n}\n\nif (map) {\n  const locations = JSON.parse(map.dataset.locations);\n  displayMap(locations);\n}\n\nif (logoutBtn) logoutBtn.addEventListener('click', logout);\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const name = document.getElementById('name').value;\n    const email = document.getElementById('email').value;\n    updateSettings({ name, email }, 'data');\n  });\n}\n\nif (userPasswordForm) {\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const btnSave = document.querySelector('.btn--save-password');\n    btnSave.textContent = 'Updating...';\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password',\n    );\n    btnSave.textContent = 'Save Password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n","/* eslint-disable */\n\nexport const displayMap = (locations) => {\n  // ----------------------------------------------\n  // Create the map and attach it to the #map\n  // ----------------------------------------------\n\n  const map = L.map('map', { zoomControl: false });\n\n  // ----------------------------------------------\n  // Add a tile layer to add to our map\n  // ----------------------------------------------\n\n  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n  }).addTo(map);\n\n  // ----------------------------------------------\n  // Create icon using the image provided by Jonas\n  // ----------------------------------------------\n\n  var greenIcon = L.icon({\n    iconUrl: '/img/pin.png',\n    iconSize: [32, 40], // size of the icon\n    iconAnchor: [16, 45], // point of the icon which will correspond to marker's location\n    popupAnchor: [0, -50], // point from which the popup should open relative to the iconAnchor\n  });\n\n  // ----------------------------------------------\n  // Add locations to the map\n  // ----------------------------------------------\n\n  const points = [];\n  locations.forEach((loc) => {\n    // Create points\n    points.push([loc.coordinates[1], loc.coordinates[0]]);\n\n    // Add markers\n    L.marker([loc.coordinates[1], loc.coordinates[0]], { icon: greenIcon })\n      .addTo(map)\n      // Add popup\n      .bindPopup(`<p>Day ${loc.day}: ${loc.description}</p>`, {\n        autoClose: false,\n      })\n      .openPopup();\n  });\n\n  // ----------------------------------------------\n  // Set map bounds to include current location\n  // ----------------------------------------------\n\n  const bounds = L.latLngBounds(points).pad(0.5);\n  map.fitBounds(bounds);\n\n  // Disable scroll on map\n  map.scrollWheelZoom.disable();\n};\n","/* eslint-disable */\n\n// import axios from 'axios';\nimport { showAlert } from './alert';\n\nexport const login = async (email, password) => {\n  const devBaseUrl = 'http://127.0.0.1:3000';\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', 'Logged in successfully!');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1000);\n    }\n  } catch (err) {\n    const errorMessage =\n      err.response && err.response.data && err.response.data.message\n        ? err.response.data.message\n        : 'An unknown error occurred';\n    showAlert('error', errorMessage);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n\n    if (res.data.status === 'success') location.reload(true);\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again');\n  }\n};\n","/* eslint-disable */\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","/* eslint-disable */\n\nimport { showAlert } from './alert';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  const devBaseUrl = 'http://127.0.0.1:3000';\n  try {\n    const url =\n      type === 'password'\n        ? '/api/v1/users/update-my-password/'\n        : '/api/v1/users/update-me';\n    const res = await axios({\n      method: 'PATCH',\n      url,\n      data,\n    });\n\n    if (res.data.status === 'success') {\n      showAlert(\n        'success',\n        `${type.charAt(0).toUpperCase() + type.slice(1)} updated successfully!`,\n      );\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n"],"names":["$e9c91518574fdb31$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$e9c91518574fdb31$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$bf5b431e6a69fea8$export$596d806903d1f59e","email","password","res","axios","method","url","data","status","location","assign","err","response","message","$bf5b431e6a69fea8$export$a0973bcfe11b05c9","reload","$955535ce7513e32c$export$f558026a994b6051","charAt","toUpperCase","slice","$407eccdc61ba7a94$var$map","getElementById","$407eccdc61ba7a94$var$logoutBtn","$407eccdc61ba7a94$var$loginForm","$407eccdc61ba7a94$var$userDataForm","$407eccdc61ba7a94$var$userPasswordForm","addEventListener","e","preventDefault","value","locations","map","L","zoomControl","tileLayer","attribution","addTo","greenIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","points","forEach","loc","push","coordinates","marker","bindPopup","day","description","autoClose","openPopup","bounds","latLngBounds","pad","fitBounds","scrollWheelZoom","disable","JSON","parse","dataset","name","btnSave","textContent","passwordCurrent","passwordConfirm"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}